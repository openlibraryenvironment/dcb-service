name: Snapshot Release
on:
  push:
    paths-ignore:
      - 'src/docs/asciidoc/**' # If all modified paths fall only in this set then this will be ignored
    branches:
      - main
      - 'testrel-*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel any in progress build of this same ref and run this one.
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Need to checkout everything to ensure we have the tag info we need.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-test-

      - name: Setup GraalVM CE
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Install Native Image
      #   run: gu install native-image
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_KINT_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_KINT_USERNAME }}
          password: ${{ secrets.DOCKER_KINT_PASSWORD }}

      - name: Build And Push Docker Image
        env:
          DOCKER_REPOSITORY_PATH: ${{ secrets.DOCKER_KINT_REPOSITORY_PATH }}
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_KINT_REGISTRY_URL }}
          TESTCONTAINERS_RYUK_DISABLED: true
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          echo "git.tag=$GIT_TAG" > dcb/src/main/resources/git.properties
          echo "git.commit.id=$(git rev-parse HEAD)" >> dcb/src/main/resources/git.properties
          echo "git.branch=$(git rev-parse --abbrev-ref HEAD)" >> dcb/src/main/resources/git.properties
          export DCB_NAME_PART=$([ "$BRANCH_NAME" = "main" ] && echo "dcb" || echo dcb-${BRANCH_NAME} )
          export DOCKER_IMAGE=`echo "${DOCKER_REGISTRY_URL}/${DOCKER_REPOSITORY_PATH}/${DCB_NAME_PART}" | sed -e 's#//#/#' -e 's#^/##'`
          ./gradlew check jacocoTestReport licenseReport dockerPush --no-daemon

      - name: Build And Push Docker Native Image
        continue-on-error: true # Ensure if this fails it does not fail the build
        env:
          DOCKER_REPOSITORY_PATH: ${{ secrets.DOCKER_KINT_REPOSITORY_PATH }}
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_KINT_REGISTRY_URL }}
          TESTCONTAINERS_RYUK_DISABLED: true
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          export DCB_NAME_PART=$([ "$BRANCH_NAME" = "main" ] && echo "dcb" || echo dcb-${BRANCH_NAME} )
          export DOCKER_IMAGE=`echo "${DOCKER_REGISTRY_URL}/${DOCKER_REPOSITORY_PATH}/${DCB_NAME_PART}" | sed -e 's#//#/#' -e 's#^/##'`
          ./gradlew dockerPushNative --no-daemon

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "**/build/test-results/test/**/*.xml"

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          jacoco-csv-file: "**/jacocoTestReport.csv"

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - uses: actions/upload-artifact@v4
        if: always() # Upload artefacts even when build fails.
        with:
          name: Build Artifacts
          path: |
            **/build/reports
