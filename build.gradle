import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
	repositories {
		mavenCentral()
		maven { url "https://maven.k-int.com/content/repositories/releases" }
	}
	dependencies {
		classpath 'com.k_int.gradle:kint-gradle-plugin:2.2.1'
	}
}

plugins {
	id("com.github.johnrengelman.shadow") version "8.1.1"
	id("org.asciidoctor.jvm.convert") version "3.3.2"
  id 'org.graalvm.buildtools.native' version '0.10.3'
}

//version = "1.0.0"

// Apply our custom plugins.
apply plugin: "com.k_int.gradle.plugin"
apply plugin: "com.k_int.gradle.conventional-git"

// Includes
apply from: "gradle/asciidoc.gradle"

repositories {
	mavenCentral()
	maven { url "https://maven.k-int.com/content/repositories/releases" }
}

task staticCopyOpenApiViews(type: Copy) {
	dependsOn 'dcb:assemble'

	from('dcb/build/classes/java/main/META-INF/swagger/views/') {
		exclude '**/*.html'
	}

	into 'build/docs/asciidoc'
}

task staticCopyOpenApi(type: Copy) {

	dependsOn ':staticCopyOpenApiViews'

	from('dcb/build/classes/java/main/META-INF/swagger') {
		include '*.yml'
	}

	// Promote the redoc index page to the open api sub-path
	from('dcb/build/classes/java/main/META-INF/swagger/views/redoc/index.html')
	into 'build/docs/asciidoc/openapi'
}


tasks.withType(ShadowJar) {
    setZip64(true)
}

afterEvaluate {
	final rootVersion = getVersion()
	subprojects {
		it.version = rootVersion
	}
}

